import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import { clsx } from '../helpers';
import './eclipse.css';

var Eclipse = function Eclipse(_ref) {
  var className = _ref.className,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? '#ED4585' : _ref$color,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 200 : _ref$size,
      _ref$speed = _ref.speed,
      speed = _ref$speed === void 0 ? 1 : _ref$speed,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? 2 : _ref$width,
      style = _ref.style;
  var scale = size / 200;
  var translate = size * scale;
  var thickness = width * 2;
  return React.createElement("div", {
    className: clsx('rl-eclipse', className),
    style: _objectSpread({
      '--rl-eclipse-size': "".concat(size, "px"),
      '--rl-eclipse-color': color,
      '--rl-eclipse-scale': scale,
      '--rl-eclipse-translate': "".concat(translate, "px"),
      '--rl-eclipse-speed': "".concat(speed, "s"),
      '--rl-eclipse-thickness': "".concat(thickness, "px")
    }, style)
  }, React.createElement("div", null));
};

process.env.NODE_ENV !== "production" ? Eclipse.propTypes = {
  className: PropTypes.string,
  color: PropTypes.string,
  size: PropTypes.number,
  width: PropTypes.number,
  style: PropTypes.object
} : void 0;
export default Eclipse;